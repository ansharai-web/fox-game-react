{"version":3,"sources":["constants.ts","components/buttons/components/left-button/LeftButton.tsx","components/buttons/components/left-button/handleLeftButton.ts","components/buttons/components/center-button/MiddleButton.tsx","components/buttons/components/center-button/handleMiddleButton.ts","components/buttons/components/right-button/RightButton.tsx","components/buttons/components/right-button/handleRightButton.ts","components/buttons/ButtonsContainer.tsx","components/modal/Modal.tsx","components/icons/Icons.tsx","hooks/gameLogic.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ICONS","SCENES","getNextHungerTime","clock","Math","floor","random","getNextDieTime","getNextPoopTime","LeftButton","handleLeftButton","setSelectedIcon","useContext","ButtonContext","prev","length","useHandleLeftButton","className","onClick","MiddleButton","handleMiddleButton","current","actions","startGame","changeWeather","cleanUpPoop","feed","selectedIcon","includes","console","log","useHandleMiddleButton","RightButton","handleRightButton","useHandleRightButton","ButtonsContainer","Modal","text","Icons","useGameLogic","useState","modFox","modScene","scene","wakeTime","sleepTime","hungryTime","timeToStartCelebrating","timeToEndCelebrating","poopTime","dieTime","gameState","setGameState","Date","now","nextTimeToTick","setNextTimeToTick","showPoopBag","setShowPoopBag","modalText","setModalText","nextAnimationFrame","oldGameState","wake","startCelebrating","tick","useEffect","gameInterval","setInterval","requestAnimationFrame","clearInterval","newScene","createContext","undefined","ButtonsProvider","props","Provider","App","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.619f53e4.chunk.js","sourcesContent":["export const ICONS = [\"fish\", \"poop\", \"weather\"];\r\nexport const SCENES = [\"day\", \"rain\"];\r\nexport const TICK_RATE = 3000;\r\nexport const RAIN_CHANCE = 0.2;\r\nexport const DAY_LENGTH = 60;\r\nexport const NIGHT_LENGTH = 2;\r\nexport const getNextHungerTime = (clock: number) =>\r\n    Math.floor(Math.random() * 3) + 2 + clock;\r\nexport const getNextDieTime = (clock: number) =>\r\n    Math.floor(Math.random() * 3) + 3 + clock;\r\nexport const getNextPoopTime = (clock: number) =>\r\n    Math.floor(Math.random() * 3) + 8 + clock;\r\n","import React from 'react'\r\nimport {useHandleLeftButton} from './handleLeftButton'\r\n\r\n\r\nfunction LeftButton() {\r\n    const {handleLeftButton} = useHandleLeftButton()\r\n    return <button className=\"btn left-btn\" onClick={handleLeftButton}/>\r\n\r\n}\r\n\r\nexport {LeftButton}\r\n","import {useContext} from 'react'\r\nimport {ButtonContext} from '../../../../App'\r\nimport {ICONS} from '../../../../constants'\r\n\r\nfunction useHandleLeftButton(){\r\n    const {setSelectedIcon} =  useContext(ButtonContext)\r\n    function handleLeftButton(){\r\n        setSelectedIcon((prev: number) => prev === 0 ? ICONS.length -1   : prev - 1 )\r\n    }\r\n    return {handleLeftButton}\r\n}\r\nexport {useHandleLeftButton}\r\n","import React from 'react'\r\nimport {useHandleMiddleButton} from './handleMiddleButton'\r\n\r\n\r\nfunction MiddleButton() {\r\n    const {handleMiddleButton} = useHandleMiddleButton()\r\n\r\n    return <button className=\"btn middle-btn\" onClick={handleMiddleButton}/>\r\n}\r\n\r\nexport {MiddleButton}\r\n","import {useContext} from 'react'\r\nimport {ButtonContext} from '../../../../App'\r\nimport {ICONS} from '../../../../constants'\r\n\r\nfunction useHandleMiddleButton(){\r\n    const {current,actions:{startGame,changeWeather,cleanUpPoop,feed},selectedIcon} = useContext(ButtonContext)\r\n    function handleMiddleButton() {\r\n        // can't do actions while in these states\r\n        if (['SLEEP', 'FEEDING', 'CELEBRATING', 'HATCHING'].includes(current)) {\r\n            return\r\n        }\r\n        if (current === 'INIT' || current === 'DEAD') {\r\n            startGame()\r\n            return console.log('start game')\r\n        }\r\n        // execute the currently selected action\r\n        switch (ICONS[selectedIcon]) {\r\n            case 'weather':\r\n                changeWeather()\r\n                break\r\n            case 'poop':\r\n                cleanUpPoop()\r\n                break\r\n            case 'fish':\r\n                feed()\r\n                break\r\n        }\r\n\r\n\r\n    }\r\n    return {\r\n        handleMiddleButton\r\n    }\r\n}\r\nexport {useHandleMiddleButton}\r\n","import React from 'react'\r\nimport {useHandleRightButton} from './handleRightButton'\r\n\r\n\r\nfunction RightButton() {\r\n    const {handleRightButton} = useHandleRightButton()\r\n\r\n    return <button className=\"btn right-btn\" onClick={handleRightButton}/>\r\n}\r\n\r\nexport {RightButton}\r\n","import {useContext} from 'react'\r\nimport {ButtonContext} from '../../../../App'\r\nimport {ICONS} from '../../../../constants'\r\n\r\nfunction useHandleRightButton(){\r\n    const {setSelectedIcon} = useContext(ButtonContext)\r\n\r\n    function handleRightButton(){\r\n\r\n        setSelectedIcon((prev: number) => prev ===  ICONS.length -1 ? 0   : prev +1  )\r\n\r\n\r\n    }\r\n    return{handleRightButton}\r\n}\r\n\r\nexport {useHandleRightButton}\r\n","import React from 'react'\r\nimport {LeftButton} from './components/left-button/LeftButton'\r\nimport {MiddleButton} from './components/center-button/MiddleButton'\r\nimport {RightButton} from './components/right-button/RightButton'\r\n\r\nfunction ButtonsContainer(){\r\n        return(\r\n            <div className='buttons'>\r\n                <LeftButton />\r\n                <MiddleButton/>\r\n                <RightButton />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport {ButtonsContainer}\r\n","import React from 'react'\r\n\r\ninterface IModal {\r\n    text: string\r\n}\r\n\r\nfunction Modal({text}: IModal) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-inner\">\r\n                {text}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Modal}\r\n","import React from 'react'\r\n\r\ninterface IIcons {\r\n    selectedIcon: number\r\n}\r\n\r\nfunction Icons({selectedIcon}: IIcons) {\r\n    return (\r\n        <div className=\"icons\">\r\n            <div className={`icon fish-icon ${selectedIcon === 0 ? 'highlighted' : ''}`}/>\r\n            <div className={`icon poop-icon ${selectedIcon === 1 ? 'highlighted' : ''} `}/>\r\n            <div className={`icon weather-icon ${selectedIcon === 2 ? 'highlighted' : ''}`}/>\r\n        </div>)\r\n}\r\n\r\nexport {Icons}\r\n","import {useEffect, useState} from 'react'\r\nimport {\r\n    DAY_LENGTH,\r\n    getNextDieTime,\r\n    getNextHungerTime,\r\n    getNextPoopTime, NIGHT_LENGTH,\r\n    RAIN_CHANCE,\r\n    SCENES,\r\n    TICK_RATE\r\n} from '../constants'\r\n\r\nfunction useGameLogic() {\r\n    const [gameState, setGameState] = useState({\r\n        current: 'INIT',\r\n        modFox: 'hidden',\r\n        modScene: 'day',\r\n        scene: 0,\r\n        clock: 1,\r\n        wakeTime: -1,\r\n        sleepTime: -1,\r\n        hungryTime: -1,\r\n        timeToStartCelebrating: -1,\r\n        timeToEndCelebrating: -1,\r\n        poopTime: -1,\r\n        dieTime: -1\r\n    })\r\n    const {current, modFox, modScene, clock, wakeTime, sleepTime, hungryTime, timeToStartCelebrating, timeToEndCelebrating, poopTime, dieTime, scene} = gameState\r\n    const [nextTimeToTick, setNextTimeToTick] = useState(Date.now())\r\n    const [selectedIcon, setSelectedIcon] = useState(0)\r\n    const [showPoopBag, setShowPoopBag] = useState(false)\r\n    const [modalText, setModalText] = useState('Press the middle button to start')\r\n\r\n    function nextAnimationFrame() {\r\n        const now = Date.now()\r\n        if (nextTimeToTick <= now) {\r\n            tick()\r\n            setNextTimeToTick(now + TICK_RATE)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (current !== 'DEAD') {\r\n            const gameInterval = setInterval(() => {\r\n                requestAnimationFrame(nextAnimationFrame)\r\n            }, 1000)\r\n            return () =>\r\n                clearInterval(gameInterval)\r\n        }\r\n    })\r\n\r\n    function tick() {\r\n        switch (clock) {\r\n            case wakeTime:\r\n                wake()\r\n                break\r\n            case sleepTime:\r\n                sleep()\r\n                break\r\n            case hungryTime:\r\n                getHungry()\r\n                break\r\n            case timeToStartCelebrating:\r\n                setGameState((oldGameState) => ({...oldGameState, ...startCelebrating(oldGameState.clock)}))\r\n                break\r\n            case timeToEndCelebrating:\r\n                setGameState((oldGameState) => ({...oldGameState, ...endCelebrating()}))\r\n                break\r\n            case poopTime:\r\n                poop()\r\n                break\r\n            case dieTime:\r\n                die()\r\n                break\r\n        }\r\n        setGameState((oldGameState) => ({...oldGameState, clock: oldGameState.clock + 1}))\r\n    }\r\n\r\n    function startGame() {\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'HATCHING',\r\n            wakeTime: oldGameState.clock + 3,\r\n            modScene: 'day',\r\n            modFox: 'fox-egg '\r\n        }))\r\n        setModalText('')\r\n    }\r\n\r\n    function wake() {\r\n        const scene = Math.random() > RAIN_CHANCE ? 0 : 1\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'IDLING',\r\n            wakeTime: -1,\r\n            modFox: SCENES[scene] === 'rain' ? 'fox-rain' : 'fox-idling',\r\n            modScene: SCENES[scene],\r\n            sleepTime: oldGameState.clock + DAY_LENGTH,\r\n            hungryTime: getNextHungerTime(oldGameState.clock)\r\n        }))\r\n    }\r\n\r\n\r\n    function changeWeather() {\r\n        const newScene = (1 + scene) % SCENES.length\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            scene: newScene,\r\n            modScene: SCENES[newScene],\r\n            modFox: SCENES[newScene] === 'rain' ? 'fox-rain' : 'fox-idling'\r\n\r\n        }))\r\n    }\r\n\r\n    function cleanUpPoop() {\r\n        if (current === 'POOPING') {\r\n            setGameState((oldGameState) => ({\r\n                ...oldGameState,\r\n                dieTime: -1,\r\n                hungryTime: getNextHungerTime(oldGameState.clock),\r\n                ...startCelebrating(oldGameState.clock)\r\n            }))\r\n            setShowPoopBag(true)\r\n\r\n\r\n        }\r\n    }\r\n\r\n    function poop() {\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'POOPING',\r\n            poopTime: -1,\r\n            modFox: 'fox-pooping',\r\n            dieTime: getNextDieTime(oldGameState.clock)\r\n        }))\r\n\r\n\r\n    }\r\n\r\n    function feed() {\r\n        // can only feed when hungry\r\n        if (current !== 'HUNGRY') {\r\n            return\r\n        }\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'FEEDING',\r\n            dieTime: -1,\r\n            poopTime: getNextPoopTime(oldGameState.clock),\r\n            modFox: 'fox-eating',\r\n            timeToStartCelebrating: oldGameState.clock + 2\r\n\r\n        }))\r\n    }\r\n\r\n    function startCelebrating(clock: number) {\r\n        return {\r\n            current: 'CELEBRATING',\r\n            modFox: 'fox-celebrate',\r\n            timeToStartCelebrating: -1,\r\n            timeToEndCelebrating: clock + 2\r\n        }\r\n    }\r\n\r\n    function endCelebrating() {\r\n        setShowPoopBag(false)\r\n        return {\r\n            timeToEndCelebrating: -1,\r\n            current: 'IDLING',\r\n            modFox: SCENES[scene] === 'rain' ? 'fox-rain' : 'fox-idling'\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function clearTimes() {\r\n        return {\r\n            wakeTime: -1,\r\n            sleepTime: -1,\r\n            hungryTime: -1,\r\n            dieTime: -1,\r\n            poopTime: -1,\r\n            timeToStartCelebrating: -1,\r\n            timeToEndCelebrating: -1\r\n\r\n        }\r\n    }\r\n\r\n    function sleep() {\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'SLEEP',\r\n            modFox: 'fox-sleep',\r\n            modScene: 'night',\r\n            ...clearTimes(),\r\n            wakeTime: oldGameState.clock + NIGHT_LENGTH\r\n        }))\r\n    }\r\n\r\n    function getHungry() {\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'HUNGRY',\r\n            dieTime: getNextDieTime(oldGameState.clock),\r\n            hungryTime: -1,\r\n            modFox: 'fox-hungry'\r\n        }))\r\n    }\r\n\r\n    function die() {\r\n        setGameState((oldGameState) => ({\r\n            ...oldGameState,\r\n            current: 'DEAD',\r\n            modScene: 'dead',\r\n            modFox: 'fox-dead',\r\n            ...clearTimes()\r\n        }))\r\n        setModalText(`The fox died, press the middle button to start`)\r\n\r\n    }\r\n\r\n    return {\r\n        modScene,\r\n        modFox,\r\n        showPoopBag,\r\n        modalText,\r\n        actions: {changeWeather, cleanUpPoop, feed, startGame},\r\n        setSelectedIcon,\r\n        current,\r\n        selectedIcon\r\n    }\r\n\r\n}\r\n\r\nexport {useGameLogic}\r\n","import React, {createContext} from 'react'\nimport './App.css'\nimport {ButtonsContainer} from './components/buttons/ButtonsContainer'\nimport {Modal} from './components/modal/Modal'\nimport {Icons} from './components/icons/Icons'\nimport {useGameLogic} from './hooks/gameLogic'\n\n\n\nexport const  ButtonContext = createContext<any>(undefined)\n\nfunction ButtonsProvider(props: any){\n    return(\n        <ButtonContext.Provider {...props}/>\n        )\n}\nfunction App() {\n    const {\n        modScene,\n        modFox,\n        showPoopBag,\n        modalText,\n        actions,\n        setSelectedIcon,\n        current,\n        selectedIcon\n    } = useGameLogic()\n\n    return (\n        <div className=\"container\">\n            <div className=\"inner\">\n                <div className={`game ${modScene}`}/>\n                <div className={`fox ${modFox}`}/>\n                <div className={`poop-bag ${showPoopBag ? '' : 'hidden'}`}/>\n                <div className=\"foreground-rain\"/>\n                <div className=\"frame\"/>\n                <Modal text={modalText}/>\n                <ButtonsProvider value={{actions,setSelectedIcon, current,selectedIcon}}>\n                    <ButtonsContainer />\n                </ButtonsProvider>\n                <Icons selectedIcon={selectedIcon}/>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './sprites.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}